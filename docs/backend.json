
{
  "entities": {
    "Document": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Document",
      "type": "object",
      "description": "Represents a document stored in the virtual library.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Document entity."
        },
        "title": {
          "type": "string",
          "description": "The title of the document."
        },
        "author": {
          "type": "string",
          "description": "The author of the document."
        },
        "year": {
          "type": "number",
          "description": "The year the document was published."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the document."
        },
        "fileUrl": {
          "type": "string",
          "description": "URL of the PDF file.",
          "format": "uri"
        },
        "categoryId": {
          "type": "string",
          "description": "ID of the category this document belongs to."
        },
        "folderId": {
          "type": "string",
          "description": "ID of the folder this document is in. Can be null if it's in the root of a category."
        },
        "tagIds": {
          "type": "array",
          "description": "References to Tags. (Relationship: Tag N:N Document)",
          "items": {
            "type": "string"
          }
        },
        "lastUpdated": {
          "type": "string",
          "description": "Date and time the document was last updated.",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string",
          "description": "Firebase Auth UID of the user who created the document."
        }
      },
      "required": [
        "id",
        "title",
        "author",
        "year",
        "description",
        "fileUrl",
        "categoryId",
        "createdBy"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a top-level category for organizing content, managed by Admins.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Category entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the category."
        },
        "description": {
          "type": "string",
          "description": "A description of the category."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Folder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Folder",
      "type": "object",
      "description": "Represents a user-creatable folder within a category or another folder.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Folder entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the folder."
        },
        "categoryId": {
          "type": "string",
          "description": "The top-level category this folder belongs to."
        },
        "parentFolderId": {
          "type": "string",
          "description": "ID of the parent folder. Null if it's a top-level folder within a category."
        },
        "createdBy": {
          "type": "string",
          "description": "Firebase Auth UID of the user who created the folder."
        }
      },
      "required": [
        "id",
        "name",
        "categoryId",
        "createdBy"
      ]
    },
    "Tag": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Tag",
      "type": "object",
      "description": "Represents a tag for cross-classification of documents.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Tag entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the tag."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the virtual library.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        },
        "role": {
          "$ref": "#/backend/auth/customClaims/role"
        }
      },
      "required": [
        "id",
        "email",
        "role"
      ]
    },
     "AuditLog": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AuditLog",
      "type": "object",
      "description": "Records a change event in the system for auditing purposes.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the log entry."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The ISO 8601 timestamp of when the event occurred."
        },
        "userId": {
          "type": "string",
          "description": "The Firebase Auth UID of the user who performed the action."
        },
        "userName": {
          "type": "string",
          "description": "The display name of the user who performed the action."
        },
        "action": {
          "type": "string",
          "enum": ["create", "update", "delete", "role_change"],
          "description": "The type of action performed."
        },
        "entityType": {
          "type": "string",
          "enum": ["Document", "Category", "Folder", "User", "Tag"],
          "description": "The type of entity that was affected."
        },
        "entityId": {
          "type": "string",
          "description": "The ID of the entity that was affected."
        },
        "entityName": {
            "type": "string",
            "description": "A display name for the entity (e.g. document title, user name)."
        },
        "details": {
          "type": "string",
          "description": "A human-readable description of the change."
        }
      },
      "required": [
        "id",
        "timestamp",
        "userId",
        "userName",
        "action",
        "entityType",
        "entityId",
        "entityName",
        "details"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ],
    "customClaims": {
      "role": {
        "type": "string",
        "enum": ["Admin", "Editor", "User"]
      }
    }
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. User ID is the Firebase Auth UID.",
          "permissions": {
              "read": "isAdmin() || isOwner()",
              "list": "isAdmin()",
              "write": "isAdmin() || isOwner()"
          },
          "subcollections": [
            {
              "path": "auditLogs/{logId}",
              "definition": {
                "entityName": "AuditLog",
                "schema": {
                  "$ref": "#/backend/entities/AuditLog"
                },
                "description": "Stores audit trail of this specific user's actions."
              }
            }
          ]
        }
      },
      {
        "path": "/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores top-level categories, managed by Admins."
        }
      },
       {
        "path": "/folders/{folderId}",
        "definition": {
          "entityName": "Folder",
          "schema": {
            "$ref": "#/backend/entities/Folder"
          },
          "description": "Stores user-created folders for organizing documents."
        }
      },
      {
        "path": "/tags/{tagId}",
        "definition": {
          "entityName": "Tag",
          "schema": {
            "$ref": "#/backend/entities/Tag"
          },
          "description": "Stores tags for cross-classification of documents."
        }
      },
      {
        "path": "/documents/{documentId}",
        "definition": {
          "entityName": "Document",
          "schema": {
            "$ref": "#/backend/entities/Document"
          },
          "description": "Stores the details of each document, including metadata and file URL."
        }
      }
    ]
  }
}
